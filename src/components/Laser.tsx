/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei";

import {
  RapierRigidBody,
  RigidBody,
  RigidBodyProps,
} from "@react-three/rapier";
import { useRef } from "react";
import * as THREE from "three";

type GLTFResult = {
  nodes: {
    imagetostl_mesh3: THREE.Mesh;
  };
  materials: {
    mat3: THREE.Material;
  };
};

export default function Laser({ ...props }: RigidBodyProps) {
  const { nodes, materials } = useGLTF("/Laser.glb") as unknown as GLTFResult;

  const laserRef = useRef<RapierRigidBody>(null);

  return (
    <RigidBody
      ref={laserRef}
      {...props}
      type='fixed'
      colliders='cuboid'
      position={[-800, 0, 30]}
      rotation={[0, 0, 0]} // Now correctly using horizontalAxis
      scale={1.5}
    >
      <group>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.imagetostl_mesh3.geometry}
          material={materials.mat3}
        />
      </group>
    </RigidBody>
  );
}

useGLTF.preload("/Laser.glb");
